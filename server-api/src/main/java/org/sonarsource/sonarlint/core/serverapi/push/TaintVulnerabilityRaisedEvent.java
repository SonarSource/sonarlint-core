/*
 * SonarLint Core - Server API
 * Copyright (C) 2016-2023 SonarSource SA
 * mailto:info AT sonarsource DOT com
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 3 of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 */
package org.sonarsource.sonarlint.core.serverapi.push;

import java.time.Instant;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.CheckForNull;
import javax.annotation.Nullable;
import org.sonarsource.sonarlint.core.commons.CleanCodeAttribute;
import org.sonarsource.sonarlint.core.commons.ImpactSeverity;
import org.sonarsource.sonarlint.core.commons.IssueSeverity;
import org.sonarsource.sonarlint.core.commons.RuleType;
import org.sonarsource.sonarlint.core.commons.SoftwareQuality;
import org.sonarsource.sonarlint.core.commons.push.ServerEvent;

public class TaintVulnerabilityRaisedEvent implements ServerEvent {
  private final String key;
  private final String projectKey;
  private final String branchName;
  private final Instant creationDate;
  private final String ruleKey;
  private final IssueSeverity severity;
  private final RuleType type;
  private final Location mainLocation;
  private final List<Flow> flows;
  @Nullable
  private final String ruleDescriptionContextKey;
  @Nullable
  private final CleanCodeAttribute cleanCodeAttribute;
  private final Map<SoftwareQuality, ImpactSeverity> impacts;


  public TaintVulnerabilityRaisedEvent(String key, String projectKey, String branchName, Instant creationDate, String ruleKey, IssueSeverity severity, RuleType type,
    Location mainLocation, List<Flow> flows, @Nullable String ruleDescriptionContextKey, @Nullable CleanCodeAttribute cleanCodeAttribute, Map<SoftwareQuality,
    ImpactSeverity> impacts) {
    this.key = key;
    this.projectKey = projectKey;
    this.branchName = branchName;
    this.creationDate = creationDate;
    this.ruleKey = ruleKey;
    this.severity = severity;
    this.type = type;
    this.mainLocation = mainLocation;
    this.flows = flows;
    this.ruleDescriptionContextKey = ruleDescriptionContextKey;
    this.cleanCodeAttribute = cleanCodeAttribute;
    this.impacts = impacts;
  }

  public String getKey() {
    return key;
  }

  public String getProjectKey() {
    return projectKey;
  }

  public String getBranchName() {
    return branchName;
  }

  public Instant getCreationDate() {
    return creationDate;
  }

  public String getRuleKey() {
    return ruleKey;
  }

  public IssueSeverity getSeverity() {
    return severity;
  }

  public RuleType getType() {
    return type;
  }

  public Location getMainLocation() {
    return mainLocation;
  }

  public List<Flow> getFlows() {
    return flows;
  }

  public Optional<CleanCodeAttribute> getCleanCodeAttribute() {
    return Optional.ofNullable(cleanCodeAttribute);
  }

  public Map<SoftwareQuality, ImpactSeverity> getImpacts() {
    return impacts;
  }

  @CheckForNull
  public String getRuleDescriptionContextKey() {
    return ruleDescriptionContextKey;
  }

  public static class Location {
    private final String filePath;
    private final String message;
    private final TextRange textRange;

    public Location(String filePath, String message, TextRange textRange) {
      this.filePath = filePath;
      this.message = message;
      this.textRange = textRange;
    }

    public String getFilePath() {
      return filePath;
    }

    public String getMessage() {
      return message;
    }

    public TextRange getTextRange() {
      return textRange;
    }

    public static class TextRange {
      private final int startLine;
      private final int startLineOffset;
      private final int endLine;
      private final int endLineOffset;
      private final String hash;

      public TextRange(int startLine, int startLineOffset, int endLine, int endLineOffset, String hash) {
        this.startLine = startLine;
        this.startLineOffset = startLineOffset;
        this.endLine = endLine;
        this.endLineOffset = endLineOffset;
        this.hash = hash;
      }

      public int getStartLine() {
        return startLine;
      }

      public int getStartLineOffset() {
        return startLineOffset;
      }

      public int getEndLine() {
        return endLine;
      }

      public int getEndLineOffset() {
        return endLineOffset;
      }

      public String getHash() {
        return hash;
      }
    }
  }

  public static class Flow {
    private final List<Location> locations;

    public Flow(List<Location> locations) {
      this.locations = locations;
    }

    public List<Location> getLocations() {
      return locations;
    }
  }
}
