schedules:
- cron: "0 0 * * *"
  displayName: Daily midnight build
  branches:
    include:
    - master
  always: true

pool:
  vmImage: 'ubuntu-latest'

variables:
  - group: sonarsource-build-variables

resources:
  repositories:
    - repository: commonTemplates
      type: git
      name: pipelines-yaml-templates
      ref:  refs/tags/v1.0.1

stages:
- template: stage-with-burgr-notifications.yml@commonTemplates
  parameters:
    burgrName: 'build'
    burgrType: 'build'
    stageName: 'build'
    stageDisplayName: Build and stage to repox
    jobs:
    - job: build
      displayName: Build and stage to repox
      variables:
        MAVEN_CACHE_FOLDER: $(Pipeline.Workspace)/.m2/repository
        MAVEN_OPTS: '-Xmx3072m -Dmaven.repo.local=$(MAVEN_CACHE_FOLDER)'
        commonMavenArguments: -B -Pdeploy-sonarsource -Dmaven.test.skip=true
      steps:
      - checkout: self
        fetchDepth: 1
      - task: CacheBeta@0
        displayName: Cache Maven local repo
        inputs:
          key: maven | pom.xml
          path: $(MAVEN_CACHE_FOLDER)
      - task: DownloadSecureFile@1
        displayName: 'Download Maven settings'
        name: mavenSettings
        inputs:
          secureFile: 'maven-settings.xml'
      - task: DownloadSecureFile@1
        displayName: 'Download JKS keystore'
        name: jks
        inputs:
          secureFile: 'SonarSource-2019-2021.jks'
      - template: update-maven-version-steps.yml
        parameters:
          mavenSettingsFilePath: $(mavenSettings.secureFilePath)
      - task: Maven@3
        displayName: 'Run Maven deploy and sign'
        condition: ne(variables['Build.Reason'], 'PullRequest')
        env:
          ARTIFACTORY_DEPLOY_USERNAME: $(ARTIFACTORY_DEPLOY_USERNAME)
          ARTIFACTORY_DEPLOY_PASSWORD: $(ARTIFACTORY_DEPLOY_PASSWORD)
        inputs:
          goals: 'deploy'
          options: >-
            $(commonMavenArguments)
            --settings $(mavenSettings.secureFilePath)
            -Djarsigner.skip=false
            -Dsonarsource.keystore.path=$(jks.secureFilePath)
            -Dsonarsource.keystore.password=$(jksPassword)
          publishJUnitResults: false
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: '1.11'
          mavenOptions: $(MAVEN_OPTS)
      - task: Maven@3
        displayName: 'Run Maven deploy'
        condition: eq(variables['Build.Reason'], 'PullRequest')
        env:
          ARTIFACTORY_DEPLOY_USERNAME: $(ARTIFACTORY_DEPLOY_USERNAME)
          ARTIFACTORY_DEPLOY_PASSWORD: $(ARTIFACTORY_DEPLOY_PASSWORD)
        inputs:
          goals: 'deploy'
          options: >-
            $(commonMavenArguments)
            --settings $(mavenSettings.secureFilePath)
          publishJUnitResults: false
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: '1.11'
          mavenOptions: $(MAVEN_OPTS)
      - bash: git checkout .
        name: revertPomChanges
        displayName: Revert changes made to pom.xml to not break cache feature
- template: stage-with-burgr-notifications.yml@commonTemplates
  parameters:
    burgrName: 'validate'
    burgrType: 'validate'
    stageName: 'validate'
    stageDisplayName: Run UTs and trigger SonarQube analysis
    jobs:
    - job: test_windows
      displayName: Run unit tests on Windows
      pool:
        vmImage: 'windows-latest'
      variables:
        MAVEN_CACHE_FOLDER: $(Pipeline.Workspace)/.m2/repository
        MAVEN_OPTS: '-Xmx3072m -Dmaven.repo.local=$(MAVEN_CACHE_FOLDER)'
      steps:
      - checkout: self
        fetchDepth: 1
      - task: CacheBeta@0
        displayName: Cache Maven local repo
        inputs:
          key: maven | pom.xml
          path: $(MAVEN_CACHE_FOLDER)
      - task: DownloadSecureFile@1
        displayName: 'Download Maven settings'
        name: mavenSettings
        inputs:
          secureFile: 'maven-settings.xml'
      - task: Maven@3
        displayName: 'Run Maven verify'
        env:
          ARTIFACTORY_PRIVATE_READER_USERNAME: $(ARTIFACTORY_PRIVATE_READER_USERNAME)
          ARTIFACTORY_PRIVATE_READER_PASSWORD: $(ARTIFACTORY_PRIVATE_READER_PASSWORD)
        inputs:
          goals: 'verify'
          options: '-B --settings $(mavenSettings.secureFilePath) -Prelease -Dcommercial -Denable-repo=private'
          publishJUnitResults: true
          testResultsFiles: '**/surefire-reports/TEST-*.xml'
          testRunTitle: 'UTs on Windows'
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: '1.11'
          mavenOptions: $(MAVEN_OPTS)
    - job: test_linux
      displayName: 'Run unit tests on Linux'
      pool:
        vmImage: 'ubuntu-latest'
      variables:
        MAVEN_CACHE_FOLDER: $(Pipeline.Workspace)/.m2/repository
        MAVEN_OPTS: '-Xmx3072m -Dmaven.repo.local=$(MAVEN_CACHE_FOLDER)'
      steps:
      - checkout: self
        fetchDepth: 1
      - task: CacheBeta@0
        displayName: Cache Maven local repo
        inputs:
          key: maven | pom.xml
          path: $(MAVEN_CACHE_FOLDER)
      - task: DownloadSecureFile@1
        displayName: 'Download Maven settings'
        name: mavenSettings
        inputs:
          secureFile: 'maven-settings.xml'
      - task: Maven@3
        displayName: 'Run Maven verify'
        env:
          ARTIFACTORY_PRIVATE_READER_USERNAME: $(ARTIFACTORY_PRIVATE_READER_USERNAME)
          ARTIFACTORY_PRIVATE_READER_PASSWORD: $(ARTIFACTORY_PRIVATE_READER_PASSWORD)
        inputs:
          goals: 'verify'
          options: '-B --settings $(mavenSettings.secureFilePath) -Prelease -Dcommercial -Denable-repo=private'
          publishJUnitResults: true
          testResultsFiles: '**/surefire-reports/TEST-*.xml'
          testRunTitle: 'UTs on Linux'
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: '1.11'
          mavenOptions: $(MAVEN_OPTS)
    - job: sonarqube
      displayName: SonarQube analysis on Next
      variables:
        MAVEN_CACHE_FOLDER: $(Pipeline.Workspace)/.m2/repository
        MAVEN_OPTS: '-Xmx3072m -Dmaven.repo.local=$(MAVEN_CACHE_FOLDER)'
      steps:
      - task: CacheBeta@0
        displayName: Cache Maven local repo
        inputs:
          key: maven | pom.xml
          path: $(MAVEN_CACHE_FOLDER)
      - task: DownloadSecureFile@1
        displayName: 'Download Maven settings'
        name: mavenSettings
        inputs:
          secureFile: 'maven-settings.xml'
      - template: prepare-sq-analysis-steps.yml
      - task: Maven@3
        env:
          ARTIFACTORY_PRIVATE_READER_USERNAME: $(ARTIFACTORY_PRIVATE_READER_USERNAME)
          ARTIFACTORY_PRIVATE_READER_PASSWORD: $(ARTIFACTORY_PRIVATE_READER_PASSWORD)
        inputs:
          goals: 'org.jacoco:jacoco-maven-plugin:prepare-agent verify'
          options: -B --settings $(mavenSettings.secureFilePath) -Dcommercial -Denable-repo=private
          publishJUnitResults: false
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: '1.11'
          mavenOptions: $(MAVEN_OPTS)
          sonarQubeRunAnalysis: true
          sqMavenPluginVersionChoice: 'latest'
- template: stage-with-burgr-notifications.yml@commonTemplates
  parameters:
    burgrName: 'qa'
    burgrType: 'qa'
    stageName: 'qa'
    stageDisplayName: Run ITs
    stageDependencies: build
    jobs:
    - job: its
      displayName: Run ITs
      strategy:
        matrix:
          Dogfood:
            SQ_VERSION: 'DOGFOOD'
            JDKVersion: '1.11'
          Latest:
            SQ_VERSION: 'LATEST_RELEASE'
            JDKVersion: '1.11'
          Lts79:
            SQ_VERSION: 'LATEST_RELEASE[7.9]'
            JDKVersion: '1.11'
          Lts67:
            SQ_VERSION: 'LATEST_RELEASE[6.7]'
            JDKVersion: '1.8'
      variables:
        MAVEN_CACHE_FOLDER: $(Pipeline.Workspace)/.m2/repository
        MAVEN_OPTS: '-Xmx3072m -Dmaven.repo.local=$(MAVEN_CACHE_FOLDER)'
      steps:
      - checkout: self
        fetchDepth: 1
      - task: CacheBeta@0
        displayName: Cache Maven local repo
        inputs:
          key: maven | its/pom.xml,its/tests/pom.xml
          path: $(MAVEN_CACHE_FOLDER)
      - task: DownloadSecureFile@1
        displayName: 'Download Maven settings'
        name: mavenSettings
        inputs:
          secureFile: 'maven-settings.xml'
      - template: update-maven-version-steps.yml
        parameters:
          mavenSettingsFilePath: $(mavenSettings.secureFilePath)
      - task: Maven@3
        displayName: 'Run Maven ITs for SQ $(SQ_VERSION)'
        env:
          ARTIFACTORY_QA_READER_USERNAME: $(ARTIFACTORY_QA_READER_USERNAME)
          ARTIFACTORY_QA_READER_PASSWORD: $(ARTIFACTORY_QA_READER_PASSWORD)
          # For Orchestrator
          ARTIFACTORY_API_KEY: $(ARTIFACTORY_API_KEY)
          GITHUB_TOKEN: $(GITHUB_TOKEN)
          # SonarLintInstaller
          MAVEN_LOCAL_REPOSITORY: $(MAVEN_CACHE_FOLDER)
        inputs:
          goals: 'verify'
          mavenPomFile: 'its/pom.xml'
          options: '-B --settings $(mavenSettings.secureFilePath) -Denable-repo=qa -Dsonar.runtimeVersion=$(SQ_VERSION)'
          publishJUnitResults: true
          testResultsFiles: '**/surefire-reports/TEST-*.xml'
          testRunTitle: 'ITs $(SQ_VERSION)'
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: $(JDKVersion)
          mavenOptions: $(MAVEN_OPTS)
      - bash: git checkout .
        name: revertPomChanges
        displayName: Revert changes made to pom.xml to not break cache feature
- template: promote-stage.yml@commonTemplates
  parameters:
    stageDependencies:
    - validate
    - qa
