/*
 * SonarLint Core - RPC Protocol
 * Copyright (C) 2016-2024 SonarSource SA
 * mailto:info AT sonarsource DOT com
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 3 of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 */
package org.sonarsource.sonarlint.core.rpc.protocol.backend.tracking;

import java.nio.file.Path;
import java.time.Instant;
import java.util.List;
import java.util.Map;
import java.util.UUID;
import javax.annotation.CheckForNull;
import javax.annotation.Nullable;
import org.sonarsource.sonarlint.core.rpc.protocol.common.CleanCodeAttribute;
import org.sonarsource.sonarlint.core.rpc.protocol.common.Either;
import org.sonarsource.sonarlint.core.rpc.protocol.common.ImpactSeverity;
import org.sonarsource.sonarlint.core.rpc.protocol.common.IssueSeverity;
import org.sonarsource.sonarlint.core.rpc.protocol.common.MQRModeDetails;
import org.sonarsource.sonarlint.core.rpc.protocol.common.RuleType;
import org.sonarsource.sonarlint.core.rpc.protocol.common.SoftwareQuality;
import org.sonarsource.sonarlint.core.rpc.protocol.common.StandardModeDetails;

public class TaintVulnerabilityDto {
  private final UUID id;
  private final String sonarServerKey;
  private final boolean resolved;
  private final String ruleKey;
  private final String message;
  private final Path ideFilePath;
  private final Instant introductionDate;
  private final Either<StandardModeDetails, MQRModeDetails> severityMode;
  @Deprecated(since = "10.9")
  private final IssueSeverity severity;
  @Deprecated(since = "10.9")
  private final RuleType type;
  private final List<FlowDto> flows;
  @Nullable
  private final TextRangeWithHashDto textRange;
  @Nullable
  private final String ruleDescriptionContextKey;
  @Deprecated(since = "10.9")
  @Nullable
  private final CleanCodeAttribute cleanCodeAttribute;
  @Deprecated(since = "10.9")
  private final Map<SoftwareQuality, ImpactSeverity> impacts;
  private final boolean isOnNewCode;

  public TaintVulnerabilityDto(UUID id, String sonarServerKey, boolean resolved, String ruleKey, String message, Path ideFilePath, Instant introductionDate,
    Either<StandardModeDetails, MQRModeDetails> severityMode, IssueSeverity severity, RuleType type, List<FlowDto> flows, @Nullable TextRangeWithHashDto textRange,
    @Nullable String ruleDescriptionContextKey, @Nullable CleanCodeAttribute cleanCodeAttribute, Map<SoftwareQuality, ImpactSeverity> impacts, boolean isOnNewCode) {
    this.id = id;
    this.sonarServerKey = sonarServerKey;
    this.resolved = resolved;
    this.ruleKey = ruleKey;
    this.message = message;
    this.ideFilePath = ideFilePath;
    this.introductionDate = introductionDate;
    this.severityMode = severityMode;
    this.severity = severity;
    this.type = type;
    this.flows = flows;
    this.textRange = textRange;
    this.ruleDescriptionContextKey = ruleDescriptionContextKey;
    this.cleanCodeAttribute = cleanCodeAttribute;
    this.impacts = impacts;
    this.isOnNewCode = isOnNewCode;
  }

  public UUID getId() {
    return id;
  }

  public String getSonarServerKey() {
    return sonarServerKey;
  }

  public boolean isResolved() {
    return resolved;
  }

  public String getRuleKey() {
    return ruleKey;
  }

  public String getMessage() {
    return message;
  }

  public Path getIdeFilePath() {
    return ideFilePath;
  }

  public Instant getIntroductionDate() {
    return introductionDate;
  }

  public Either<StandardModeDetails, MQRModeDetails> getSeverityMode() {
    return severityMode;
  }

  @Deprecated(since = "10.9")
  public IssueSeverity getSeverity() {
    return severity;
  }

  @Deprecated(since = "10.9")
  public RuleType getType() {
    return type;
  }

  public List<FlowDto> getFlows() {
    return flows;
  }

  @CheckForNull
  public TextRangeWithHashDto getTextRange() {
    return textRange;
  }

  @CheckForNull
  public String getRuleDescriptionContextKey() {
    return ruleDescriptionContextKey;
  }

  @Deprecated(since = "10.9")
  @CheckForNull
  public CleanCodeAttribute getCleanCodeAttribute() {
    return cleanCodeAttribute;
  }

  @Deprecated(since = "10.9")
  public Map<SoftwareQuality, ImpactSeverity> getImpacts() {
    return impacts;
  }

  public boolean isOnNewCode() {
    return isOnNewCode;
  }

  public static class FlowDto {
    private final List<LocationDto> locations;

    public FlowDto(List<LocationDto> locations) {
      this.locations = locations;
    }

    public List<LocationDto> getLocations() {
      return locations;
    }

    public static class LocationDto {
      private final TextRangeWithHashDto textRange;
      private final String message;
      private final Path filePath;

      public LocationDto(@Nullable TextRangeWithHashDto textRange, String message, @Nullable Path filePath) {
        this.textRange = textRange;
        this.message = message;
        this.filePath = filePath;
      }

      @CheckForNull
      public TextRangeWithHashDto getTextRange() {
        return textRange;
      }

      public String getMessage() {
        return message;
      }

      @CheckForNull
      public Path getFilePath() {
        return filePath;
      }
    }
  }
}
