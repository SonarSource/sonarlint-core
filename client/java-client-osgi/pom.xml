<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.sonarsource.sonarlint.core</groupId>
    <artifactId>sonarlint-core-parent</artifactId>
    <version>10.11.1-SNAPSHOT</version>
    <relativePath>../../pom.xml</relativePath>
  </parent>
  <artifactId>sonarlint-java-client-osgi</artifactId>
  <name>SonarLint Core - Java Client OSGi</name>
  <description>Common SonarLint features bundled for OSGi</description>

  <dependencies>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>sonarlint-commons</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>sonarlint-java-client-dependencies</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>sonarlint-java-client-utils</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>sonarlint-rpc-java-client</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>sonarlint-rpc-protocol</artifactId>
      <version>${project.version}</version>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <executions>
          <execution>
            <id>empty-javadoc-jar</id>
            <phase>package</phase>
            <goals>
              <goal>jar</goal>
            </goals>
            <configuration>
              <classifier>javadoc</classifier>
              <classesDirectory>${basedir}/javadoc</classesDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>parse-version</id>
            <goals>
              <!-- Populate variables parsedVersion.osgiVersion -->
              <goal>parse-version</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>biz.aQute.bnd</groupId>
        <artifactId>bnd-maven-plugin</artifactId>
        <extensions>true</extensions>
        <executions>
          <!-- Used to create the META-INF/MANIFEST.MF for the OSGi normal JAR archive -->
          <execution>
            <id>prepare-normal-MANIFEST.MF</id>
            <goals>
              <goal>bnd-process</goal>
            </goals>
            <configuration>
              <bndfile>${project.basedir}/java-client-osgi.bnd</bndfile>
              <manifestPath>${project.basedir}/target/normal-MANIFEST.MF</manifestPath>
            </configuration>
          </execution>

          <!-- Used to create the META-INF/MANIFEST.MF for the OSGi sources JAR archive -->
          <execution>
            <id>prepare-sources-MANIFEST.MF</id>
            <goals>
              <goal>bnd-process</goal>
            </goals>
            <configuration>
              <bndfile>${project.basedir}/java-client-osgi-sources.bnd</bndfile>
              <manifestPath>${project.basedir}/target/sources-MANIFEST.MF</manifestPath>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <dependencies>
          <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>maven-shade-ext-bnd-transformer</artifactId>
            <version>${project.version}</version>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <id>shade</id>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <createDependencyReducedPom>true</createDependencyReducedPom>
          <minimizeJar>true</minimizeJar>
          <createSourcesJar>true</createSourcesJar>

          <!-- We have to use our own custom transformer as the Maven Shade and Bndtools plug-in collide on META-INF/MANIFEST.MF files -->
          <transformers>
            <transformer implementation="org.sonarsource.sonarlint.maven.shade.ext.ManifestBndTransformer">
              <normalJarManifestPath>${project.basedir}/target/normal-MANIFEST.MF</normalJarManifestPath>
              <sourcesJarManifestPath>${project.basedir}/target/sources-MANIFEST.MF</sourcesJarManifestPath>
            </transformer>
          </transformers>

          <!-- The dependencies we actually want to be shaded, without transitive ones! -->
          <artifactSet>
            <includes>
              <include>${project.groupId}:sonarlint-commons</include>
              <include>${project.groupId}:sonarlint-java-client-dependencies</include>
              <include>${project.groupId}:sonarlint-java-client-utils</include>
              <include>${project.groupId}:sonarlint-rpc-java-client</include>
              <include>${project.groupId}:sonarlint-rpc-protocol</include>
            </includes>
          </artifactSet>

          <!-- The dependencies we want to relocate to not conflict with already existing bundles -->
          <relocations>
            <relocation>
              <pattern />
              <shadedPattern>org.sonarsource.sonarlint.shaded.</shadedPattern>
              <includes>
                <include>com.google.gson.**</include>
                <include>org.eclipse.lsp4j.**</include>
                <include>org.eclipse.jgit.**</include>
                <include>org.slf4j.**</include>
              </includes>
            </relocation>
          </relocations>

          <!-- We don't want to have this files from all the dependencies shaded / relocated -->
          <filters>
            <filter>
              <artifact>*:*</artifact>
              <excludes>
                <exclude>module-info.class</exclude>
                <exclude>logback-shared.xml</exclude>
                <exclude>sl_core_version.txt</exclude>
                <exclude>META-INF/*.SF</exclude>
                <exclude>META-INF/*.DSA</exclude>
                <exclude>META-INF/*.RSA</exclude>
                <exclude>META-INF/LICENSE*</exclude>
                <exclude>META-INF/NOTICE*</exclude>
                <exclude>LICENSE*</exclude>
                <exclude>NOTICE*</exclude>
                <exclude>*.proto</exclude>
              </excludes>
            </filter>

            <!-- Shade only the classes from the specific artifacts as the other ones are provided using BND -->
            <filter>
              <artifact>${project.groupId}:*</artifact>
              <includes>
                <include>**</include>
              </includes>
            </filter>
          </filters>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
